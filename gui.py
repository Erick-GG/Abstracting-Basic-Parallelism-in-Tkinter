# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
from tkinter import Tk, Canvas, Button, PhotoImage, messagebox

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\erikg\OneDrive\Documents\A.UPSRJ\5to_Cuatrimestre\ProgramacionConcurrente\periodoDos\MiPrimeraApp\build\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


class BankGUI:
    def __init__(self, window, instance_number, withdraw_callback, deposit_callback):
        self.window = window
        self.instance_number = instance_number
        self.withdraw_callback = withdraw_callback
        self.deposit_callback = deposit_callback
        self.setup_gui()

    def setup_gui(self):
        self.window.geometry("600x400")
        self.window.configure(bg="#FFFFFF")
        self.window.title(f"Santanchafa Bank - Usuario {self.instance_number}")

        self.canvas = Canvas(
            self.window,
            bg="#FFFFFF",
            height=400,
            width=600,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )
        self.canvas.place(x=0, y=0)

        # Elementos visuales
        self.canvas.create_rectangle(0.0, 0.0, 600.0, 97.0, fill="#FF0000", outline="")
        self.canvas.create_text(139.0, 21.0, anchor="nw", text="Santanchafa", fill="#FFFFFF", font=("Inter", 50 * -1))
        self.canvas.create_text(249.0, 111.0, anchor="nw", text="Balance:", fill="#000000", font=("Inter", 25 * -1))

        # Botones
        button_image_1 = PhotoImage(file=relative_to_assets("button_1.png"))
        # Botón de depósito
        self.button_1 = Button(
            self.window,
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=self.handle_deposit,
            relief="flat"
        )
        self.button_1.image = button_image_1
        self.button_1.place(x=180.0, y=200.0)

        button_image_2 = PhotoImage(file=relative_to_assets("button_2.png"))
        # Botón de retiro
        self.button_2 = Button(
            self.window,
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=self.handle_withdraw,
            relief="flat"
        )
        self.button_2.image = button_image_2
        self.button_2.place(x=180.0, y=260.0)

        # Número de usuario
        self.canvas.create_text(10.0, 341.0, anchor="nw", text=f"No. Usuario: {self.instance_number}", fill="#000000", font=("Inter", 15 * -1))

    def update_balance_display(self, balance):
        self.canvas.delete("balance_text")
        self.canvas.create_text(
            249.0,
            141.0,
            anchor="nw",
            text=f"${balance}",
            fill="#000000",
            font=("Inter", 25 * -1),
            tags="balance_text"
        )

    def handle_withdraw(self):
        success = self.withdraw_callback()
        if success:
            messagebox.showinfo("Éxito", f"[Usuario {self.instance_number}] Retiro exitoso de $50")
        else:
            messagebox.showerror("Error", f"[Usuario {self.instance_number}] Fondos insuficientes")

    def handle_deposit(self):
        self.deposit_callback()
        messagebox.showinfo("Éxito", f"[Usuario {self.instance_number}] Depósito exitoso de $50")
